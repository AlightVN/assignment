{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 3,
    "pending": 0,
    "failures": 2,
    "start": "2023-06-13T02:47:32.290Z",
    "end": "2023-06-13T02:47:33.220Z",
    "duration": 930,
    "testsRegistered": 5,
    "passPercent": 60,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "353465a0-2058-4c84-ad1c-efd5377811b2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bf049be1-1645-43b3-b750-225abeb0ed80",
          "title": "POST /users",
          "fullFile": "D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\test\\auth.test.js",
          "file": "\\test\\auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /users\"",
              "fullTitle": "POST /users \"before all\" hook in \"POST /users\"",
              "timedOut": false,
              "duration": 92,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Xóa tất cả dữ liệu người dùng hiện có trước mỗi bài kiểm tra\nawait User.destroy({ where: {} });",
              "err": {},
              "uuid": "7585e9f4-b44d-494d-a835-ec1f3268fdca",
              "parentUUID": "bf049be1-1645-43b3-b750-225abeb0ed80",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tạo người dùng mới thành công",
              "fullTitle": "POST /users Tạo người dùng mới thành công",
              "timedOut": false,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n  userName: 'testuser',\n  password: 'Test@123',\n  employeeNumber: 1,\n};\n  \nchai.request(app)\n  .post('/user/register')\n  .send(newUser)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.should.have.property('user');\n    res.body.user.should.have.property('userName').eql(newUser.userName);\n    res.body.user.should.have.property('employeeNumber').eql(newUser.employeeNumber);\n    res.body.should.have.property('token');\n    done();\n  });",
              "err": {},
              "uuid": "6a6061d0-a162-4a73-a647-e41ab101dc6c",
              "parentUUID": "bf049be1-1645-43b3-b750-225abeb0ed80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tạo người dùng mới thất bại với dữ liệu không hợp lệ",
              "fullTitle": "POST /users Tạo người dùng mới thất bại với dữ liệu không hợp lệ",
              "timedOut": false,
              "duration": 51,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const invalidUser = {\n  userName: 'te',\n  password: 'Test123',\n  employeeNumber: 2,\n};\nchai.request(app)\n  .post('/user/register')\n  .send(invalidUser)\n  .end((err, res) => {\n    res.should.have.status.oneOf([400, 500]);\n    res.body.should.be.a('object');\n    res.body.should.have.property('message');\n    done();\n  });",
              "err": {
                "message": "Error: Invalid Chai property: status.oneOf. See docs for proper usage of \"status\".",
                "estack": "Error: Invalid Chai property: status.oneOf. See docs for proper usage of \"status\".\n    at Object.proxyGetter [as get] (node_modules\\chai\\lib\\chai\\utils\\proxify.js:47:17)\n    at D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\test\\auth.test.js:57:32\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:857:12)\n    at D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:525:35)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "ff8e1940-8c77-46c0-9346-8e7494992475",
              "parentUUID": "bf049be1-1645-43b3-b750-225abeb0ed80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đăng nhập người dùng với thông tin hợp lệ",
              "fullTitle": "POST /users Đăng nhập người dùng với thông tin hợp lệ",
              "timedOut": false,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginUser().then((res) => {\n  res.should.have.status(200);\n  res.body.should.be.a('object');\n  res.body.should.have.property('token');\n  done();\n});",
              "err": {},
              "uuid": "381491cf-7825-45bc-a3e2-8a3825a634f6",
              "parentUUID": "bf049be1-1645-43b3-b750-225abeb0ed80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a6061d0-a162-4a73-a647-e41ab101dc6c",
            "381491cf-7825-45bc-a3e2-8a3825a634f6"
          ],
          "failures": [
            "ff8e1940-8c77-46c0-9346-8e7494992475"
          ],
          "pending": [],
          "skipped": [],
          "duration": 487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "096f8c00-74b5-4cb1-b0d1-7d851396ea11",
          "title": "Employee Test",
          "fullFile": "D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\test\\employee.test.js",
          "file": "\\test\\employee.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Employee Test\"",
              "fullTitle": "Employee Test \"before all\" hook in \"Employee Test\"",
              "timedOut": false,
              "duration": 168,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginResponse = await loginUser();\ntoken = loginResponse.body.token;",
              "err": {},
              "uuid": "0dc895b7-f31a-4a97-bb8d-79684b5ca816",
              "parentUUID": "096f8c00-74b5-4cb1-b0d1-7d851396ea11",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Lấy danh sách Employee",
              "fullTitle": "Employee Test Lấy danh sách Employee",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n  .get('/employees')\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.data.should.be.a('array');\n    done();\n  });",
              "err": {},
              "uuid": "ea356858-f84e-4a59-b688-84a189746eaf",
              "parentUUID": "096f8c00-74b5-4cb1-b0d1-7d851396ea11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tạo employees mới thành công",
              "fullTitle": "Employee Test Tạo employees mới thành công",
              "timedOut": false,
              "duration": 28,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newEmployee = {\n  firstName: \"Alight\",\n  extension: \"Legend\",\n  email: \"111@gmail.com\",\n  officeCode: \"PA_HY\",\n  reportTo: 2,\n  jobTitle: \"president\"\n};\nchai.request(app)\n  .post('/employees')\n  .send(newEmployee)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.should.have.property('user');\n    res.body.user.should.have.property('userName').eql(newEmployee.userName);\n    res.body.user.should.have.property('employeeNumber').eql(newEmployee.employeeNumber);\n    res.body.should.have.property('token');\n    done();\n  });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 401\n    at D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\test\\employee.test.js:43:25\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:857:12)\n    at D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:525:35)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "58f81fb1-9409-450d-a8d1-fea9475873ce",
              "parentUUID": "096f8c00-74b5-4cb1-b0d1-7d851396ea11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea356858-f84e-4a59-b688-84a189746eaf"
          ],
          "failures": [
            "58f81fb1-9409-450d-a8d1-fea9475873ce"
          ],
          "pending": [],
          "skipped": [],
          "duration": 130,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}