{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-12T13:22:51.642Z",
    "end": "2023-06-12T13:22:52.477Z",
    "duration": 835,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c93cbb50-c56a-479d-900b-d9cb61ac2ab3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34af692c-0d88-4866-b501-f5c12484f4e5",
          "title": "POST /users",
          "fullFile": "D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\test\\auth.test.js",
          "file": "\\test\\auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /users\"",
              "fullTitle": "POST /users \"before all\" hook in \"POST /users\"",
              "timedOut": false,
              "duration": 94,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Xóa tất cả dữ liệu người dùng hiện có trước mỗi bài kiểm tra\nawait User.destroy({ where: {} });",
              "err": {},
              "uuid": "55cb1047-16d3-45de-91d3-cdb978307d0a",
              "parentUUID": "34af692c-0d88-4866-b501-f5c12484f4e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tạo người dùng mới thành công",
              "fullTitle": "POST /users Tạo người dùng mới thành công",
              "timedOut": false,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n  userName: 'testuser',\n  password: 'Test@123',\n  employeeNumber: 1,\n};\n  \nchai.request(app)\n  .post('/user/register')\n  .send(newUser)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.should.have.property('user');\n    res.body.user.should.have.property('userName').eql(newUser.userName);\n    res.body.user.should.have.property('employeeNumber').eql(newUser.employeeNumber);\n    res.body.should.have.property('token');\n    done();\n  });",
              "err": {},
              "uuid": "c3a39999-c0be-49d7-a786-0685af0288a1",
              "parentUUID": "34af692c-0d88-4866-b501-f5c12484f4e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tạo người dùng mới thất bại với dữ liệu không hợp lệ",
              "fullTitle": "POST /users Tạo người dùng mới thất bại với dữ liệu không hợp lệ",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const invalidUser = {\n  userName: 'te',\n  password: 'Test123',\n  employeeNumber: 1,\n};\nchai.request(app)\n  .post('/user/register')\n  .send(invalidUser)\n  .end((err, res) => {\n    res.should.have.status(400);\n    res.body.should.be.a('object');\n    res.body.should.have.property('message');\n    done();\n  });",
              "err": {},
              "uuid": "264f8b98-1402-4df8-bbce-7a5cc9309c68",
              "parentUUID": "34af692c-0d88-4866-b501-f5c12484f4e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đăng nhập người dùng với thông tin hợp lệ",
              "fullTitle": "POST /users Đăng nhập người dùng với thông tin hợp lệ",
              "timedOut": false,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginUser().then((res) => {\n  res.should.have.status(200);\n  res.body.should.be.a('object');\n  res.body.should.have.property('token');\n  done();\n});",
              "err": {},
              "uuid": "9d82609e-d054-4f2f-b24a-d6d0c70d9fc2",
              "parentUUID": "34af692c-0d88-4866-b501-f5c12484f4e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3a39999-c0be-49d7-a786-0685af0288a1",
            "264f8b98-1402-4df8-bbce-7a5cc9309c68",
            "9d82609e-d054-4f2f-b24a-d6d0c70d9fc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf5e3bd8-cfa9-4c83-937b-a5f15fa9b6f0",
          "title": "Employee Test",
          "fullFile": "D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\test\\employee.test.js",
          "file": "\\test\\employee.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Employee Test\"",
              "fullTitle": "Employee Test \"before all\" hook in \"Employee Test\"",
              "timedOut": false,
              "duration": 175,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginResponse = await loginUser();\ntoken = loginResponse.body.token;",
              "err": {},
              "uuid": "29c6c10d-1d75-4150-8065-aecdde9b5f52",
              "parentUUID": "bf5e3bd8-cfa9-4c83-937b-a5f15fa9b6f0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Lấy danh sách Employee",
              "fullTitle": "Employee Test Lấy danh sách Employee",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n  .get('/employees')\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.data.should.be.a('array');\n    done();\n  });",
              "err": {},
              "uuid": "a18f58cc-c672-483b-8b01-758d97684e2e",
              "parentUUID": "bf5e3bd8-cfa9-4c83-937b-a5f15fa9b6f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a18f58cc-c672-483b-8b01-758d97684e2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}