{
  "stats": {
    "suites": 2,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-13T03:34:02.652Z",
    "end": "2023-06-13T03:34:03.774Z",
    "duration": 1122,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6d6b9d2b-778a-48fc-9e2c-f03818136aaf",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c4beee7-f28c-4194-8cac-128fb79d4c9c",
          "title": "POST /users",
          "fullFile": "D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\test\\auth.test.js",
          "file": "\\test\\auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /users\"",
              "fullTitle": "POST /users \"before all\" hook in \"POST /users\"",
              "timedOut": false,
              "duration": 79,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Xóa tất cả dữ liệu người dùng hiện có trước mỗi bài kiểm tra\nawait User.destroy({ where: {} });",
              "err": {},
              "uuid": "51510867-6961-44e1-9c85-2f729ec5e00c",
              "parentUUID": "9c4beee7-f28c-4194-8cac-128fb79d4c9c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tạo người dùng mới thành công",
              "fullTitle": "POST /users Tạo người dùng mới thành công",
              "timedOut": false,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n  userName: 'testuser',\n  password: 'Test@123',\n  employeeNumber: 1,\n};\n  \nchai.request(app)\n  .post('/user/register')\n  .send(newUser)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.should.have.property('user');\n    res.body.user.should.have.property('userName').eql(newUser.userName);\n    res.body.user.should.have.property('employeeNumber').eql(newUser.employeeNumber);\n    res.body.should.have.property('token');\n    done();\n  });",
              "err": {},
              "uuid": "db5e9e4a-e305-42ce-b062-e66c1205f5af",
              "parentUUID": "9c4beee7-f28c-4194-8cac-128fb79d4c9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tạo người dùng mới thất bại với dữ liệu không hợp lệ",
              "fullTitle": "POST /users Tạo người dùng mới thất bại với dữ liệu không hợp lệ",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const invalidUser = {\n  userName: 'te',\n  password: 'Test123',\n  employeeNumber: 2,\n};\nchai.request(app)\n  .post('/user/register')\n  .send(invalidUser)\n  .end((err, res) => {\n    res.should.have.status(400);\n    res.body.should.be.a('object');\n    res.body.should.have.property('message');\n    done();\n  });",
              "err": {},
              "uuid": "7eb25465-4124-4277-ada8-3b94be8f3238",
              "parentUUID": "9c4beee7-f28c-4194-8cac-128fb79d4c9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đăng nhập người dùng với thông tin hợp lệ",
              "fullTitle": "POST /users Đăng nhập người dùng với thông tin hợp lệ",
              "timedOut": false,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginUser().then((res) => {\n  res.should.have.status(200);\n  res.body.should.be.a('object');\n  res.body.should.have.property('token');\n  done();\n});",
              "err": {},
              "uuid": "3e890c08-a12e-474e-9b49-4d3618da3f3f",
              "parentUUID": "9c4beee7-f28c-4194-8cac-128fb79d4c9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db5e9e4a-e305-42ce-b062-e66c1205f5af",
            "7eb25465-4124-4277-ada8-3b94be8f3238",
            "3e890c08-a12e-474e-9b49-4d3618da3f3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 510,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "25ff1dc7-64f9-45dd-afa0-4337b42ed622",
          "title": "Employee Test",
          "fullFile": "D:\\FA\\Thang 05\\17-05\\2_Assignments\\NodeJs_Training\\test\\employee.test.js",
          "file": "\\test\\employee.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Employee Test\"",
              "fullTitle": "Employee Test \"before all\" hook in \"Employee Test\"",
              "timedOut": false,
              "duration": 206,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginResponse = await loginUser();\ntoken = loginResponse.body.token;",
              "err": {},
              "uuid": "808b7ac5-fa63-4354-b011-cd41b4795f6a",
              "parentUUID": "25ff1dc7-64f9-45dd-afa0-4337b42ed622",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Lấy danh sách Employee",
              "fullTitle": "Employee Test Lấy danh sách Employee",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n  .get('/employees')\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.data.should.be.a('array');\n    done();\n  });",
              "err": {},
              "uuid": "2ebe2642-4858-4a9e-a65c-d6a8256a6d14",
              "parentUUID": "25ff1dc7-64f9-45dd-afa0-4337b42ed622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tạo employees mới thành công",
              "fullTitle": "Employee Test Tạo employees mới thành công",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newEmployee = {\n  firstName: \"Alight\",\n  lastName: \"Legend\",\n  extension: \"Legend\",\n  email: \"111@gmail.com\",\n  officeCode: 3,\n  reportsTo: null,\n  jobTitle: \"president\",\n  roleId: 1\n};\nchai.request(app)\n  .post('/employees')\n  .set('Authorization', `Bearer ${token}`)\n  .send(newEmployee)\n  .end((err, res) => {\n    res.should.have.status(201);\n    res.body.should.be.a('object');\n    res.body.should.have.property('status').eql(\"Success\");\n    res.body.should.have.property('message').eql(\"Employee created successfully\");\n    idTest = res.body.data.id;\n    done();\n  });",
              "err": {},
              "uuid": "cd913408-250c-4877-ac75-e3a806866b2a",
              "parentUUID": "25ff1dc7-64f9-45dd-afa0-4337b42ed622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Lấy danh sách Employee",
              "fullTitle": "Employee Test Lấy danh sách Employee",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n  .get(`/employees/${idTest}`)\n  .set('Authorization', `Bearer ${token}`)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.data.should.be.a('object');\n    done();\n  });",
              "err": {},
              "uuid": "465d9268-ea3b-4ff4-92da-bd4ec5b45cf0",
              "parentUUID": "25ff1dc7-64f9-45dd-afa0-4337b42ed622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cập nhật employee thành công",
              "fullTitle": "Employee Test Cập nhật employee thành công",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedEmployee = {\n  firstName: \"Updated\",\n  extension: \"Legend\",\n  email: \"updated@gmail.com\",\n  officeCode:  3,\n  reportsTo: 2,\n  jobTitle: \"president\",\n  roleId: 1\n};\nchai.request(app)\n  .put(`/employees/${idTest}`)\n  .set('Authorization', `Bearer ${token}`)\n  .send(updatedEmployee)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a('object');\n    res.body.should.have.property('message').eql('Employee updated successfully');\n    done();\n  });",
              "err": {},
              "uuid": "76051d3b-5f07-4122-b773-b990fb1a49a1",
              "parentUUID": "25ff1dc7-64f9-45dd-afa0-4337b42ed622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Xóa employee thành công",
              "fullTitle": "Employee Test Xóa employee thành công",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n      .delete(`/employees/${idTest}`)\n      .set('Authorization', `Bearer ${token}`)\n      .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Employee deleted successfully');\n        done();\n      });",
              "err": {},
              "uuid": "d334e6b9-82b7-453d-a5d5-a8a21d35c57d",
              "parentUUID": "25ff1dc7-64f9-45dd-afa0-4337b42ed622",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ebe2642-4858-4a9e-a65c-d6a8256a6d14",
            "cd913408-250c-4877-ac75-e3a806866b2a",
            "465d9268-ea3b-4ff4-92da-bd4ec5b45cf0",
            "76051d3b-5f07-4122-b773-b990fb1a49a1",
            "d334e6b9-82b7-453d-a5d5-a8a21d35c57d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 248,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}